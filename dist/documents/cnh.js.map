{"version":3,"sources":["../../src/documents/cnh.js"],"names":["require","sumElementsByMultipliers","sumToDV","invalidListGenerator","isCNH","value","cnh","replace","invalidList","includes","length","sum1","substr","sum2","dv1","dv2","module","exports"],"mappings":";;AAAA,eAAoEA,OAAO,CAAC,cAAD,CAA3E;AAAA,IAAQC,wBAAR,YAAQA,wBAAR;AAAA,IAAkCC,OAAlC,YAAkCA,OAAlC;AAAA,IAA2CC,oBAA3C,YAA2CA,oBAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvB,MAAMC,GAAG,GAAGD,KAAK,CAACE,OAAN,CAAc,SAAd,EAAyB,EAAzB,CAAZ;AAEA,MAAMC,WAAW,GAAGL,oBAAoB,CAAC,EAAD,CAAxC;AACA,MAAI,CAACG,GAAD,IAAQE,WAAW,CAACC,QAAZ,CAAqBH,GAArB,CAAR,IAAqCA,GAAG,CAACI,MAAJ,KAAe,EAAxD,EAA4D,OAAO,KAAP;AAE5D,MAAMC,IAAI,GAAGV,wBAAwB,CAACK,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,EAAzB,CAAnB,CAArC;AACA,MAAMC,IAAI,GAAGZ,wBAAwB,CAACK,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAc,EAAd,CAAD,EAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,CAA9B,CAApB,CAArC;AAEA,MAAME,GAAG,GAAGZ,OAAO,CAACS,IAAD,CAAnB;AACA,MAAMI,GAAG,GAAGb,OAAO,CAACW,IAAD,CAAnB,CAVuB,CAYvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO,UAAGC,GAAH,SAASC,GAAT,MAAmBT,GAAG,CAACM,MAAJ,CAAW,CAAX,EAAc,CAAd,CAA1B;AACD,CAxBD,C,CA0BA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBb,KAAjB","sourcesContent":["const { sumElementsByMultipliers, sumToDV, invalidListGenerator } = require('../lib/utils');\n\n/**\n * isCNH()\n * Calcula se uma CNH é válida\n *\n * @doc\n * CNH deve possuir 11 caracteres\n *\n * - Os caracteres 1 a 9 são números sequenciais.\n *\n *\n * - Os caracteres 10 e 11 são dígitos verificadores.\n *\n * 1) Partes do número\n *  ____________________________ ______\n * |  Número                    | D V |\n * |  5  8  3  1  6  7  9  4  5   3 4 |\n * |____________________________|_____|\n *\n * 2) Cálculo do primeiro DV.\n *\n *  - Soma-se o produto das algarismos 1 a 9 pelos números 2, 3, 4, 5, 6, 7, 8, 9, 10.\n *\n *    5   8   3   1   6   7   9   4   5\n *    x   x   x   x   x   x   x   x   x\n *    2   3   4   5   6   7   8   9   10\n * = 10 +24 +12  +5 +36 +49 +72 +36  +50  = 294\n *\n *  - O somatório encontrado é dividido por 11. O DV1 é 11 subtraído do resto da divisão. Se o\n *    resto for 10, o DV1 é 0.\n *\n * 2.1) 294 / 11 tem resto igual a 8. 11-7 = 3\n *      DV1 = 3\n *\n * 3) Cálculo do segundo DV\n *\n *  - Soma-se o produto das algarismos 1 a 9 juntamente com o 10 caractere\n *    que é o DV1, pelos números 3, 4, 5, 6, 7, 8, 9, 10, 11, 2. O DV1 será\n *    multiplicado por 2 e ficará no final.\n *\n *    5   8   3   1   6   7   9   4   5   3\n *    x   x   x   x   x   x   x   x   x   x\n *    3   4   5   6   7   8   9  10  11   2\n * = 10 +24 +12  +5 +36 +49 +72 +36 +50  +6  =  348\n *\n * 3.1) 348 / 11 tem resto igual a 7. 11 - 7 = 4.\n *      DV2 = 4\n *\n *  - O somatório encontrado é dividido por 11. O DV2 é 11 subtraído do resto da divisão. Se o\n *    resto for 10, o DV2 é 0.\n *\n * Fonte: https://www.devmedia.com.br/forum/validacao-de-cnh/372972\n *\n * @param {String} value Título eleitoral\n * @returns {Boolean}\n */\nconst isCNH = (value) => {\n  const cnh = value.replace(/[^\\d]+/g, '');\n\n  const invalidList = invalidListGenerator(11);\n  if (!cnh || invalidList.includes(cnh) || cnh.length !== 11) return false;\n\n  const sum1 = sumElementsByMultipliers(cnh.substr(0, 9), [2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  const sum2 = sumElementsByMultipliers(cnh.substr(0, 10), [3, 4, 5, 6, 7, 8, 9, 10, 11, 2]);\n\n  const dv1 = sumToDV(sum1);\n  const dv2 = sumToDV(sum2);\n\n  // console.log({\n  //   sum1,\n  //   res1: sum1 % 11,\n  //   sum2,\n  //   res2: sum2 % 11,\n  //   dv1Original: cnh.charAt(9),\n  //   dv1,\n  //   dv2Original: cnh.charAt(10),\n  //   dv2,\n  // });\n\n  return `${dv1}${dv2}` === cnh.substr(9, 2);\n};\n\n// console.log(isCNH('58316794534'));\n\nmodule.exports = isCNH;\n"],"file":"cnh.js"}